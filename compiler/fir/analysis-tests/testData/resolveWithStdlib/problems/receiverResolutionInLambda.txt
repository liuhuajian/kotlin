FILE: receiverResolutionInLambda.kt
    public final class Case1 : R|kotlin/Any| {
        public constructor(): R|Case1| {
            super<R|kotlin/Any|>()
        }

        public final fun foo(): R|kotlin/Unit| {
            lval x: R|kotlin/sequences/Sequence<kotlin/String>| = R|kotlin/sequences/sequence|<R|kotlin/String|>(<L> = sequence@fun <anonymous>(): R|kotlin/Unit| {
                lval y: R|Case1| = this@R|/Case1|
                <Unresolved name: yield>#(String())
                this@R|/Case1|.<Unresolved name: yield>#(String())
                (this@R|/Case1| as R|kotlin/sequences/SequenceScope<kotlin/String>|)
                this@R|/Case1|.R|FakeOverride<kotlin/sequences/SequenceScope.yield: R|kotlin/Unit|>|(String())
                this@R|/Case1|.R|FakeOverride<kotlin/sequences/SequenceScope.yield: R|kotlin/Unit|>|(String())
            }
            )
        }

    }
    public final fun case2(): R|kotlin/Unit| {
        lval x: R|kotlin/sequences/Sequence<kotlin/String>| = R|kotlin/sequences/sequence|<R|kotlin/String|>(<L> = sequence@fun <anonymous>(): <ERROR TYPE REF: Unresolved name: yield> {
            lval y: R|ERROR CLASS: Unresolved this@null| = this#
            <Unresolved name: yield>#(String())
            this#.<Unresolved name: yield>#(String())
            (this# as R|kotlin/sequences/SequenceScope<kotlin/String>|)
            <Unresolved name: yield>#(String())
            ^ this#.<Unresolved name: yield>#(String())
        }
        )
    }
